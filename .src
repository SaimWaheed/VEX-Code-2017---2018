#pragma config(Motor,  port2,           BLDT,          tmotorVex393_MC29, openLoop, driveLeft)
#pragma config(Motor,  port3,           LOTLIT,        tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port4,           BRDT,          tmotorVex393_MC29, openLoop, driveRight)
#pragma config(Motor,  port5,           ROTRIT,        tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port6,           FLDT,          tmotorVex393_MC29, openLoop, driveLeft)
#pragma config(Motor,  port7,           FRDT,          tmotorVex393_MC29, openLoop, driveRight)
#pragma config(Motor,  port8,           Claw,          tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

	task main()
{
	while(true)
	{
//	motor[BLDT] = vexRT[Ch3];
//	motor[FLDT] = vexRT[Ch3];
//	motor[BRDT] = vexRT[Ch2];
//	motor[FRDT] = vexRT[Ch2];
	if( abs ( vexRT[Ch2] ) > 20 ) // Check if the absolute value of the input of Channel 2 (Ch2) is greater than 20 (thld)
			motor[BLDT] = motor[FLDT] = vexRT[Ch2]; // If it is, make the Back-Left-Drive-Train (BLDT) equal to the Forward-Left-Drive-Train and set them equal to the speed of Channel 2 (Ch2)
	else // If the value of Channel 2 (Ch2) is not greater than 20 (thld)
			motor[BLDT] = motor[FLDT] = 0; // Make the Back-Left-Drive-Train (BLDT) equal to the Forward-Left-Drive-Train and set them equal to 0 speed
	if(abs(vexRT[Ch3])>20) // Check if the absolute value of the input of Channel 3 (Ch3) is greater than 20 (thld)
			motor[BRDT] = motor[FRDT] = vexRT[Ch3]; //  If it is, make the Back-Left-Drive-Train (BLDT) equal to the Forward-Left-Drive-Train and set them equal to the speed of Channel 3 (Ch3)
	else
			motor[BRDT] = motor[FRDT] = 0;

	if(vexRT[Btn6U] == 1)
		motor[LOTLIT] = motor[ROTRIT] = 127;

	else if (vexRT[Btn6D] == 1)
		motor[LOTLIT] = motor[ROTRIT] = -127;

	else
		motor[LOTLIT] = motor[ROTRIT] = 0;

	if(vexRT[Btn7U] == 1)
		motor[Claw] = 100;

	else if(vexRT[Btn7U] == 1)
		motor[Claw] = -100;

	else
		motor[Claw] = 0;
}
}
